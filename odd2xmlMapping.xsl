<?xml version="1.0" encoding="UTF-8"?>

<!-- 
        This stylesheet works on a TEI ODD, like the one generated with the TEI tool Roma,
        available at https://roma2.tei-c.org.
        An ODD is a XML/TEI document, from which one can generate both documentation (in a
        variety of formats, like html, latex, etc.) and a schema for document validation (in
        various formats as well, like relax-ng, dtd, etc.).
        A tutorial (Getting started with P5 ODDs) is available at
        https://tei-c.org/guidelines/customization/getting-started-with-p5-odds/.
        
        The ODD should contain all elements and attributes to be included in the mapping.
        
        Elements that should have the knora-base#StandoffLinkTag datatype in the mapping
        (see https://docs.knora.org/03-apis/api-v1/xml-to-standoff-mapping/#standoff-data-types), 
        must have a @knoraLink attribute in the ODD, otherwise that part of the mapping
        won't be generated by this stylesheet.
        For example, ODD for the element <ref> with mandatory attribute @target and datatype
        knora-base#StandoffLinkTag might look like this:
        <elementSpec ident="ref" module="core" mode="change">
            <attList>
                <attDef ident="target" mode="change" usage="req"/>
                <attDef ident="knoraLink" mode="add" usage="req">
                    <desc>Link in the Knora DB.</desc>
                  </attDef>
            </attList>
        </elementSpec>
        
        Elements that should have the knora-base#StandoffDateTag datatype in the mapping
        (see https://docs.knora.org/03-apis/api-v1/xml-to-standoff-mapping/#standoff-data-types), 
        must have a @knoraDate attribute in the ODD, otherwise that part of the mapping
        won't be generated by this stylesheet.
        
        Some part of the stylesheet have been commented out, but can be restored if needed.
        
        Attention! The value of the element <separatesWords> in the mapping has been set
        to 'false' by default. If a different behaviour is expected, once can create a rule
        here or edit it manually in the output.
-->


<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tei="http://www.tei-c.org/ns/1.0"
    exclude-result-prefixes="xs tei" version="2.0">
    <xsl:output method="xml" indent="yes" omit-xml-declaration="no" encoding="UTF-8"/>

    <xsl:template match="/">
        <mapping xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:noNamespaceSchemaLocation="mappingXMLToStandoff.xsd">
            <xsl:apply-templates select="//tei:elementSpec"/>
        </mapping>
    </xsl:template>

    <xsl:template match="//tei:elementSpec">
        <xsl:variable name="elementName" select="./@ident"/>
        <mappingElement>
            <tag>
                <name>
                    <xsl:value-of select="$elementName"/>
                </name>
                <class>noClass</class>
                <namespace>noNamespace</namespace>
                <separatesWords>false</separatesWords>
            </tag>
            <standoffClass>
                <classIri>
                    <xsl:text>http://www.knora.org/ontology/0112/roud-oeuvres#Standoff</xsl:text>
                    <xsl:value-of select="concat(upper-case(substring($elementName,1,1)),substring($elementName, 2))"/>
                </classIri>
                <xsl:if test="count(./tei:attList/tei:attDef[not(@mode='delete')]) > 0">
                    <attributes>
                        <xsl:for-each select="./tei:attList/tei:attDef[not(@mode='delete') and not(@ident='knoraLink')]">
                            <xsl:variable name="attributeName" select="./@ident"/>
                            <attribute>
                                <attributeName>
                                    <xsl:value-of select="$attributeName"/>
                                </attributeName>
                                <namespace>noNamespace</namespace>
                                <propertyIri>
                                    <xsl:text>http://www.knora.org/ontology/0112/roud-oeuvres#standoff</xsl:text>
                                    <xsl:value-of select="concat(upper-case(substring($elementName,1,1)),substring($elementName, 2))"/>
                                    <xsl:text>Has</xsl:text>
                                    <xsl:value-of select="concat(upper-case(substring($attributeName,1,1)),substring($attributeName, 2))"/>
                                </propertyIri>
                            </attribute>
                        </xsl:for-each>
                    </attributes>
                </xsl:if>
                <xsl:choose>
                    <xsl:when test="./tei:attList/tei:attDef[@ident='knoraLink']">
                        <datatype>
                            <type>http://www.knora.org/ontology/knora-base#StandoffLinkTag</type>
                            <attributeName>knoraLink</attributeName>
                        </datatype>
                    </xsl:when>
                    <!-- etc. 
                        <xsl:when test="./tei:attList/tei:attDef[@ident='knoraDate']">
                        <datatype>
                            <type>http://www.knora.org/ontology/knora-base#StandoffDateTag</type>
                            <attributeName>knoraDate</attributeName>
                         </datatype>
                    </xsl:when> 
                    -->
                </xsl:choose>
            </standoffClass>
        </mappingElement>
        <xsl:text>&#xa;&#xa;&#xa;</xsl:text> <!-- carriage returns -->
    </xsl:template>
</xsl:stylesheet>
